version: '3.8'
services:

  db:
    container_name: foodgram-db
    image: postgres:13.0
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped
    networks:
      - foodgram-network

  backend:
    container_name: foodgram-backend
    image: vorchala/foodgram_backend:latest
    env_file: .env
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    expose:
      - "8000"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - foodgram-network

  frontend:
    container_name: foodgram-front
    image: vorchala/foodgram_frontend:latest
    volumes:
      - frontend_build:/app/result_build/
    restart: unless-stopped

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.simple.conf:/etc/nginx/conf.d/default.conf
      - frontend_build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/usr/share/nginx/html/backend_static/
      - media_volume:/usr/share/nginx/html/media/
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - foodgram-network

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:

networks:
  foodgram-network:
    driver: bridge
